#!/usr/bin/env bash

# resolve shell-specifics
case "$(echo "$SHELL" | sed -E 's|/usr(/local)?||g')" in
    "/bin/zsh")
        RCPATH="$HOME/.zshrc"
        SOURCE="${BASH_SOURCE[0]:-${(%):-%N}}"
    ;;
    *)
        RCPATH="$HOME/.bashrc"
        if [[ -f "$HOME/.bash_aliases" ]]; then
            RCPATH="$HOME/.bash_aliases"
        fi
        SOURCE="${BASH_SOURCE[0]}"
    ;;
esac

# get base dir regardless of execution location
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
    DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
    SOURCE="$(readlink "$SOURCE")"
    [[ "$SOURCE" != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
SOURCE=$([[ "$SOURCE" = /* ]] && echo "$SOURCE" || echo "$PWD/${SOURCE#./}")
basedir=$(dirname "$SOURCE")

source "$basedir/scripts/functions.sh"

case "$1" in
    "rb" | "rbp" | "rebuild")
    (
        set -e
        # cd "$basedir"
        scripts/rebuildPatches.sh "$basedir"
    )
    ;;
    "p" | "patch")
    (
        set -e
        # cd "$basedir"
        # Windows patch applyer works on Linux two.
        git submodule init
        git submodule update
        git clone Rainbow Rails
        git config commit.gpgsign false
        cp windows-patch-applyer.jar Rails/windows-patch-applyer.jar
        cd Rails
        java -jar windows-patch-applyer.jar
        rm windoes-patch-applyer.jar
        cd ..
    )
    ;;
    "b" | "build")
    (
        set -e
        # cd "$basedir"
        java -jar movefiles.jar
        java -jar minify.jar MakeJar
        mvn package
        java -jar movefiles.jar undo
    )
    ;;
    *)
        echo "ProjectRails build tool command. This provides a variety of commands to build and manage the ProjectRails build"
        echo "environment."
        echo ""
        echo " Normal commands:"
        echo "  * rb, rebuild    | Rebuild patches, can be called from anywhere."
        echo "  * p, patch       | Apply all patches to the project without building it. Can be run from anywhere."
        echo "  * b, build       | Builds ProjectRails. You need to patch first OR this will not work."
    ;;
esac

unset RCPATH
unset SOURCE
unset basedir
unset -f color
unset -f colorend
unset -f paperstash
unset -f paperunstash
